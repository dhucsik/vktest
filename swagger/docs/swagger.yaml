basePath: /api/v1
definitions:
  actor.createActorRequest:
    properties:
      date_of_birth:
        type: string
      full_name:
        type: string
      gender:
        type: string
    type: object
  actor.createActorResponse:
    properties:
      id:
        type: integer
    type: object
  actor.errorResponse:
    properties:
      error:
        type: string
    type: object
  actor.getActorResponse:
    properties:
      date_of_birth:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      movies:
        items:
          $ref: '#/definitions/actor.movieResponse'
        type: array
    type: object
  actor.movieResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
  actor.updateActorRequest:
    properties:
      date_of_birth:
        type: string
      full_name:
        type: string
      gender:
        type: string
    type: object
  auth.authRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.authResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  auth.errorResponse:
    properties:
      error:
        type: string
    type: object
  auth.refreshRequest:
    properties:
      token:
        type: string
    type: object
  auth.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  movie.actorResponse:
    properties:
      date_of_birth:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
    type: object
  movie.createMovieRequest:
    properties:
      actor_ids:
        items:
          type: integer
        type: array
      description:
        type: string
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
  movie.createMovieResponse:
    properties:
      id:
        type: integer
    type: object
  movie.errorResponse:
    properties:
      error:
        type: string
    type: object
  movie.getMovieResponse:
    properties:
      actors:
        items:
          $ref: '#/definitions/movie.actorResponse'
        type: array
      description:
        type: string
      id:
        type: integer
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
  movie.getMoviesResponse:
    properties:
      movies:
        items:
          $ref: '#/definitions/movie.getMovieResponse'
        type: array
    type: object
  movie.updateMovieRequest:
    properties:
      actor_ids:
        items:
          type: integer
        type: array
      description:
        type: string
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: movies server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.htm
  termsOfService: http://swagger.io/terms/
  title: Swagger Movies API
  version: "1.0"
paths:
  /actors:
    get:
      consumes:
      - application/json
      description: list actors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/actor.getActorResponse'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/actor.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: list actors
      tags:
      - actors
    post:
      consumes:
      - application/json
      description: create actor
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/actor.createActorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/actor.createActorResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/actor.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create actor
      tags:
      - actors
  /actors/{id}:
    delete:
      consumes:
      - application/json
      description: delete actor
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: actor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/actor.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete actor
      tags:
      - actors
    get:
      consumes:
      - application/json
      description: get actor
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: actor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/actor.getActorResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/actor.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get actor
      tags:
      - actors
    put:
      consumes:
      - application/json
      description: update actor
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: actor ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/actor.updateActorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/actor.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/actor.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update actor
      tags:
      - actors
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.authRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/auth.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.errorResponse'
      summary: login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.refreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/auth.authResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/auth.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.errorResponse'
      summary: refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/auth.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/auth.errorResponse'
      summary: register
      tags:
      - auth
  /movies:
    get:
      consumes:
      - application/json
      description: list movies
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/movie.getMoviesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: list movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: create movie
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie.createMovieRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/movie.createMovieResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create movie
      tags:
      - movies
  /movies/{id}:
    delete:
      consumes:
      - application/json
      description: delete movie
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete movie
      tags:
      - movies
    get:
      consumes:
      - application/json
      description: get movie
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/movie.getMovieResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get movie
      tags:
      - movies
    put:
      consumes:
      - application/json
      description: update movie
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: movie ID
        in: path
        name: id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/movie.updateMovieRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update movie
      tags:
      - movies
  /movies/search:
    get:
      consumes:
      - application/json
      description: search movies
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: offset
        in: query
        name: offset
        required: true
        type: integer
      - description: title
        in: query
        name: title
        type: string
      - description: actor
        in: query
        name: actor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/movie.getMoviesResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/movie.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/movie.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: search movies
      tags:
      - movies
swagger: "2.0"
